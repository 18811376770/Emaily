const passport=require('passport');
const GoogleStrategy=require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys=require('../config/keys.js');
//User is our model class
const User = mongoose.model('users');
//user.id is the id generated by MongoDBm, user is a mongoose mondel
passport.serializeUser((user,done)=>{
  done(null,user.id);
});
passport.deserializeUser((id,done)=>{
  User.findById(id)
    .then(user=>{
      done(null,user);
    });
});
//passport.use make passport aware to authentigy user with specific strategy,
//we can customize the strategy by adding some arguments inside GoogleStrategy()
passport.use(new GoogleStrategy(
  {
  // clientID:keys.googleClientID,
  // clientSecret:keys.googleClientSecret,
  clientID:keys.googleClientID,
  clientSecret:keys.googleClientSecret,
  callbackURL:'/auth/google/callback'
},
(accessToken, refreshToken, profile, done)=>{
  User.findOne({googleId:profile.id})
    .then((existingUser)=>{
      if(existingUser){
        //we have got a record with profile.id
        done(null,existingUser);
      }else{
        //make a new record
        new User({googleId:profile.id})
          .save()
          .then(user => done(null,user));
      }
    })
  //create a new record, but it's just existed in JS world, not in MongoDB
  //we should use method save()

})
);
